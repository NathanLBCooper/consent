package server

import (
	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"

	"nathan.dev/consent/internal/server/context"
	_ "nathan.dev/consent/internal/server/docs" // Import docs generated by Swag CLI
)

// Generate docs with `swag init --parseDependency --parseInternal --parseDepth 1`

type Service struct {
	engine *gin.Engine
}

// @title           Consent API
// @version         1.0
func StartService() (*Service, error) {
	s := &Service{engine: gin.Default()}

	s.engine.Use(context.EnrichHeader)

	container := configureDependencies(s.engine)

	configureRoutes(s.engine, container)

	go s.engine.Run(":3001")

	return s, nil
}

func (s *Service) Close() {}

func configureRoutes(engine *gin.Engine, container *container) {
	engine.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	v1 := engine.Group("/v1")
	{
		v1.GET("/health", container.healthController.Health)

		account := v1.Group("/account")
		{
			account.GET(":id", container.userController.GetAccount)
		}

		Organization := v1.Group("/organization")
		{
			Organization.GET(":id", container.userController.GetOrganization)
		}
	}
}
